{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/icechycoco/Desktop/JB/jongburn/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Router from 'next/router';\nimport '../src/styles/index.less';\nimport MainLayout from '../src/Layout/Main';\nimport AuthLayout from '../src/Layout/Auth';\n\nclass MyApp extends App {\n  // Only uncomment this  method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  static async getInitialProps(appContext) {\n    // calls page's `getInitialProps` and fills `appProps.pageProps`\n    const appProps = await App.getInitialProps(appContext);\n    return _objectSpread({}, appProps);\n  }\n\n  componentDidMount() {\n    const isSignedIn = localStorage.getItem('jongburn-auth');\n\n    if (!isSignedIn) {\n      Router.replace('/auth/signin');\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      router\n    } = this.props;\n\n    if (router.route === '/auth/signin' || router.route === '/auth/signout') {\n      return __jsx(AuthLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })));\n    }\n\n    return __jsx(MainLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/icechycoco/Desktop/JB/jongburn/pages/_app.js"],"names":["React","App","Router","MainLayout","AuthLayout","MyApp","getInitialProps","appContext","appProps","componentDidMount","isSignedIn","localStorage","getItem","replace","render","Component","pageProps","router","props","route"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,0BAAP;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,KAAN,SAAoBJ,GAApB,CAAwB;AACtB;AACA;AACA;AACA;AACA;AACA,eAAaK,eAAb,CAA6BC,UAA7B,EAAyC;AACvC;AACA,UAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACK,eAAJ,CAAoBC,UAApB,CAAvB;AAEA,6BAAYC,QAAZ;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAnB;;AACA,QAAI,CAACF,UAAL,EAAiB;AACfR,MAAAA,MAAM,CAACW,OAAP,CAAe,cAAf;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAmC,KAAKC,KAA9C;;AACA,QAAID,MAAM,CAACE,KAAP,KAAiB,cAAjB,IAAmCF,MAAM,CAACE,KAAP,KAAiB,eAAxD,EAAyE;AACvE,aACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;AACD,WACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AAlCqB;;AAqCxB,eAAeX,KAAf","sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport Router from 'next/router'\nimport '../src/styles/index.less'\nimport MainLayout from '../src/Layout/Main'\nimport AuthLayout from '../src/Layout/Auth'\n\nclass MyApp extends App {\n  // Only uncomment this  method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  static async getInitialProps(appContext) {\n    // calls page's `getInitialProps` and fills `appProps.pageProps`\n    const appProps = await App.getInitialProps(appContext);\n\n    return { ...appProps }\n  }\n\n  componentDidMount() {\n    const isSignedIn = localStorage.getItem('jongburn-auth')\n    if (!isSignedIn) {\n      Router.replace('/auth/signin')\n    }\n  }\n\n  render() {\n    const { Component, pageProps, router } = this.props\n    if (router.route === '/auth/signin' || router.route === '/auth/signout') {\n      return (\n        <AuthLayout>\n          <Component {...pageProps} />\n        </AuthLayout>\n      )\n    }\n    return (\n      <MainLayout>\n        <Component {...pageProps} />\n      </MainLayout>\n    )\n  }\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}